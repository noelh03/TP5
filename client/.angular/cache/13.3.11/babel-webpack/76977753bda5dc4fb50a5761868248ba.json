{"ast":null,"code":"import _classCallCheck from \"C:\\\\TEMP\\\\3710\\\\TP5\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\TEMP\\\\3710\\\\TP5\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpClient } from \"@angular/common/http\"; // tslint:disable-next-line:ordered-imports\n\nimport { Subject } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var CommunicationService = /*#__PURE__*/(function () {\n  var CommunicationService = /*#__PURE__*/function () {\n    function CommunicationService(http) {\n      _classCallCheck(this, CommunicationService);\n\n      this.http = http;\n      this.BASE_URL = \"http://localhost:3000/database\";\n      this._listners = new Subject();\n    }\n\n    return _createClass(CommunicationService, [{\n      key: \"listen\",\n      value: function listen() {\n        return this._listners.asObservable();\n      }\n    }, {\n      key: \"filter\",\n      value: function filter(filterBy) {\n        this._listners.next(filterBy);\n      }\n    }, {\n      key: \"getEspecesOiseaux\",\n      value: function getEspecesOiseaux() {\n        return this.http.get(this.BASE_URL + \"/birds\").pipe(catchError(this.errorToClient));\n      }\n    }, {\n      key: \"getNomScientifiqueConsommer\",\n      value: function getNomScientifiqueConsommer() {\n        return this.http.get(this.BASE_URL + \"/birds/distinct-nomscientifique\").pipe(catchError(this.errorToClient));\n      }\n    }, {\n      key: \"insertEspeceOiseau\",\n      value: function insertEspeceOiseau(espece) {\n        return this.http.post(this.BASE_URL + \"/birds/insert\", espece).pipe(catchError(this.errorToClient));\n      }\n    }, {\n      key: \"updateEspeceOiseau\",\n      value: function updateEspeceOiseau(espece) {\n        return this.http.put(this.BASE_URL + \"/birds/update\", espece).pipe(catchError(this.errorToClient));\n      }\n    }, {\n      key: \"deleteEspeceOiseau\",\n      value: function deleteEspeceOiseau(nomscientifique) {\n        return this.http.delete(this.BASE_URL + \"/birds/delete/\".concat(nomscientifique)).pipe(catchError(this.errorToClient));\n      }\n    }, {\n      key: \"updateKeyAndOtherFields\",\n      value: function updateKeyAndOtherFields(request) {\n        return this.http.put(this.BASE_URL + \"/birds/updateKeyAndOtherFields\", request).pipe(catchError(this.errorToClient));\n      }\n    }, {\n      key: \"updateKey\",\n      value: function updateKey(request) {\n        return this.http.put(this.BASE_URL + \"/birds/updateKey\", request).pipe(catchError(this.errorToClient));\n      }\n    }, {\n      key: \"updatePredator\",\n      value: function updatePredator(request) {\n        return this.http.put(this.BASE_URL + \"/birds/updatePredator\", request).pipe(catchError(this.errorToClient));\n      }\n    }, {\n      key: \"errorToClient\",\n      value: function errorToClient(error) {\n        var errorMessage = 'An error occurred';\n\n        if (error.error && error.error.error) {\n          errorMessage = error.error.error;\n        }\n\n        alert(errorMessage);\n        return throwError(errorMessage);\n      }\n    }]);\n  }();\n\n  CommunicationService.ɵfac = function CommunicationService_Factory(t) {\n    return new (t || CommunicationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CommunicationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommunicationService,\n    factory: CommunicationService.ɵfac\n  });\n  return CommunicationService;\n})();","map":null,"metadata":{},"sourceType":"module"}